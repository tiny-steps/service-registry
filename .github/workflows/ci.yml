name: Build and Deploy to Kubernetes

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.generate_tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Generate image tag
        id: generate_tag
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          echo "tag=${SHORT_SHA}-${TIMESTAMP}" >> $GITHUB_OUTPUT
      - name: Build and push image with Jib
        run: |
          IMAGE_NAME="subhankarm2312/ts-service-registry"
          IMAGE_TAG="${{ steps.generate_tag.outputs.tag }}"
          mvn compile com.google.cloud.tools:jib-maven-plugin:build -Dimage="${IMAGE_NAME}:${IMAGE_TAG}"

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Step A: Setup SSH for the runner
      - name: Set up SSH agent for tunnel
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SISH_PRIVATE_KEY }}

      # Step B: Establish the Sish tunnel and run it in the background
      - name: Establish Sish Tunnel to Local K8s
        run: |
          ssh -o StrictHostKeyChecking=no -o ExitOnForwardFailure=yes -N -R tinysteps:30000:localhost:6443 \
              -p 2222 sish@${{ secrets.SISH_HOST }} &
          sleep 5

      # Step C: Generate a kubeconfig file that points to the tunnel
      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          cat > ~/.kube/config <<EOF
          apiVersion: v1
          clusters:
          - cluster:
              insecure-skip-tls-verify: true
              server: https://${{ secrets.SISH_HOST }}:30000
            name: sish-tunnel-cluster
          contexts:
          - context:
              cluster: sish-tunnel-cluster
              user: github-actions-user
            name: sish-tunnel-context
          current-context: sish-tunnel-context
          kind: Config
          preferences: {}
          users:
          - name: github-actions-user
            user:
              token: "${{ secrets.K8S_SERVICE_ACCOUNT_TOKEN }}"
          EOF

      # Step D: Deploy to Kubernetes using the new kubeconfig
      - name: Deploy to Kubernetes
        # THIS IS THE CRUCIAL PART
        env:
          KUBECONFIG: ~/.kube/config
        run: |
          # The KUBECONFIG variable tells kubectl where to find the config file.
          kubectl get nodes
          
          IMAGE_TAG="${{ needs.build-and-push.outputs.IMAGE_TAG }}"
          kubectl set image deployment/ts-service-registry-deployment ts-service-registry=subhankarm2312/ts-service-registry:$IMAGE_TAG
